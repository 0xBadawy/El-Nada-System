using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;

namespace FWD.G_Doctors
{
    public partial class Form_Doctor_info_Add : Form
    {
        DB_FWDEntities DataBase = new DB_FWDEntities();
        TB_Doctor_Info tb_doctor_info = new TB_Doctor_Info();
        public Form_Doctor_info_Add()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            FWD.DB_FWDEntities dbContext2 = new FWD.DB_FWDEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext2.View_Doctor_Info.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                gridControl1.DataSource = dbContext2.View_Doctor_Info.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
           



            FWD.DB_FWDEntities dbContext = new FWD.DB_FWDEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.TBE_LOC.LoadAsync().ContinueWith(loadTask =>
            {
    // Bind data to control when loading complete
    Edit_Add.Properties.DataSource = dbContext.TBE_LOC.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }

        private void panel2_Paint(object sender, PaintEventArgs e)
        {

        }

        private void Form_Doctor_info_Add_Load(object sender, EventArgs e)
        {
            // TODO: This line of code loads data into the 'dB_FWDDataSet2083.TBE_LOC' table. You can move, or remove it, as needed.
          //  this.tBE_LOCTableAdapter.Fill(this.dB_FWDDataSet2083.TBE_LOC);

        }

        private void label3_Click(object sender, EventArgs e)
        {

        }

        private void gridControl1_Click(object sender, EventArgs e)
        {

        }

        private void simpleButton2_Click(object sender, EventArgs e)
        {
            Toise.Toast_Done ToastDone = new Toise.Toast_Done();
            Toise.Toast_Waring ToastWaring = new Toise.Toast_Waring();
            Toise.Toast_Wrong toast_Wrong = new Toise.Toast_Wrong();

            try
            {
                if (edt_doc_name.Text == "" || edt_doc_spatilize.Text == "")
                {
                    ToastWaring.Lable_Text.Text = "اكمل باقى البيانات";
                    ToastWaring.Show();
                }
                else
                {
                    tb_doctor_info.Doctor_Name = edt_doc_name.Text;
                    tb_doctor_info.Doctor_spicailize = edt_doc_spatilize.Text;
                    tb_doctor_info.Doctor_Add = Convert.ToInt32(Edit_Add.EditValue);

                    DataBase.TB_Doctor_Info.Add(tb_doctor_info);
                    DataBase.SaveChanges();


                    ToastDone.Lable_Text.Text = "تمت الاضافة";
                    ToastDone.Show();
                    this.Close();
                }
            }
            catch
            {
                toast_Wrong.Lable_Text.Text = "حدث خطأ";
                toast_Wrong.Show();

            }
        }

        private void Edit_Add_EditValueChanged(object sender, EventArgs e)
        {

        }

        private void label1_Click(object sender, EventArgs e)
        {

        }

        private void edt_doc_spatilize_EditValueChanged(object sender, EventArgs e)
        {

        }

        private void label2_Click(object sender, EventArgs e)
        {

        }

        private void edt_doc_name_EditValueChanged(object sender, EventArgs e)
        {

        }

        private void btn_del_Click(object sender, EventArgs e)
        {
            int id = Convert.ToInt32(gridView1.GetFocusedRowCellValue("Doctor_ID"));
            var rs = MessageBox.Show("عملية حذف", "هل انت متاكد من عملية الحذف", MessageBoxButtons.YesNo);

            Toise.Toast_Done ToastDone = new Toise.Toast_Done();
            Toise.Toast_Waring ToastWaring = new Toise.Toast_Waring();
            Toast.Toast_Del ToastDel = new Toast.Toast_Del();
            Toast.Message_Box message_Box = new Toast.Message_Box();

            try
            {
                if (rs == DialogResult.Yes)
                {
                    tb_doctor_info = DataBase.TB_Doctor_Info.Where(x => x.Doctor_ID == id).FirstOrDefault();
                    DataBase.Entry(tb_doctor_info).State = EntityState.Deleted;
                    DataBase.SaveChanges();
                    UpDate_Data();

                    ToastDel.Show();
                }
            }
            catch
            {
                message_Box.Message_Text.Text = "لا يمكنك حذف هذا الدكتور لانة مسجل لدى بعض الحالات يمكنك التعديل على بياناتة";
                message_Box.Show();

             ////   ToastWaring.Lable_Text.Text = "لا يوجد شئ لحذفة";
         //       ToastWaring.Show();
            }
        }

        private void btn_ref_Click(object sender, EventArgs e)
        {
            UpDate_Data();
        }
        private void UpDate_Data()
        {
            DataBase = new DB_FWDEntities();
            gridControl1.DataSource = DataBase.TB_Doctor_Info.ToList();
        }

        private void simpleButton3_Click(object sender, EventArgs e)
        {
            gridControl1.ShowPrintPreview();
        }
    }
}
