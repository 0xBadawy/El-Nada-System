using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using DevExpress.XtraGrid.Views.Grid;


namespace FWD.G_Registered_Users
{
    public partial class Form_Registered_Users_List : Form
    {
        TB_Registered_Users tb_registered_users = new TB_Registered_Users();
        DB_FWDEntities DataBase = new DB_FWDEntities();

        public Form_Registered_Users_List()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext


            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            FWD.DB_FWDEntities dbContext = new FWD.DB_FWDEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.View_Registered_Users_New.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                gridControl1.DataSource = dbContext.View_Registered_Users_New.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
            gridView1.CustomDrawCell += gridControl1_CustomDrawCell;
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            FWD.DB_FWDEntities dbContext00 = new FWD.DB_FWDEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext00.View_Registered_Users_New.LoadAsync().ContinueWith(loadTask =>
            {
    // Bind data to control when loading complete
    gridControl1.DataSource = dbContext00.View_Registered_Users_New.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }

        private void btn_edt_Click(object sender, EventArgs e)
        {


            int id = Convert.ToInt32(gridView1.GetFocusedRowCellValue("Registered_Users_ID"));
            G_Registered_Users.Form_Registered_Users_Add form_registered_users_ddd = new Form_Registered_Users_Add();
            tb_registered_users = DataBase.TB_Registered_Users.Where(x => x.Registered_Users_ID == id).FirstOrDefault();
            form_registered_users_ddd.ID_1 = id;
            form_registered_users_ddd.Add.Text = "تعديل";

            form_registered_users_ddd.edt_per_name.Text = tb_registered_users.Registered_Users_Name;
            form_registered_users_ddd.edt_per_social_state.EditValue = tb_registered_users.Registered_Users_so_st.ToString();
            form_registered_users_ddd.edt_per_ssn.Text = tb_registered_users.Registered_Users_Ssn;
            form_registered_users_ddd.edt_hus_name.Text = tb_registered_users.Registered_Users_Hus_Name;
            form_registered_users_ddd.edt_hus_phone.Text = tb_registered_users.Registered_Users_Hus_Phone;
            form_registered_users_ddd.edt_hus_ssn.Text = tb_registered_users.Registered_Users_Hus_Ssn;
            form_registered_users_ddd.edt_per_phone.Text = tb_registered_users.Registered_Users_phone;
            form_registered_users_ddd.Fsmily_num.Text = tb_registered_users.Registered_Users_Fam_Num.ToString();
            form_registered_users_ddd.edt_per_add.EditValue = tb_registered_users.Registered_Users_Add.ToString();
            form_registered_users_ddd.edt_per_add_det.Text = tb_registered_users.Registered_Users_Add_det;
            form_registered_users_ddd.edt_income_name.Text = tb_registered_users.Registered_Users_incom_name;
            form_registered_users_ddd.edt_incode_val.Text = tb_registered_users.Registered_Users_income_val.ToString();
            form_registered_users_ddd.edt_supp_name.EditValue = tb_registered_users.Registered_Users_Supp.ToString();
            form_registered_users_ddd.edt_rank.EditValue = tb_registered_users.Registered_Users_Rank.ToString();
            form_registered_users_ddd.edt_per_helth_type.EditValue = tb_registered_users.Registered_Users_Helth.ToString();
            form_registered_users_ddd.edt_per_helth_det.Text = tb_registered_users.Registered_Users_Helth_info;

            form_registered_users_ddd.edt_per_bairth.Text = tb_registered_users.Registered_Users_BairthDay.ToString();



            form_registered_users_ddd.Show();


        }

        private void btn_ref_Click(object sender, EventArgs e)
        {

            UpDate_Data();
        }
        private void UpDate_Data()
        {
            DataBase = new DB_FWDEntities();
            gridControl1.DataSource = DataBase.View_Registered_Users_New.ToList();
            gridView1.CustomDrawCell += gridControl1_CustomDrawCell;

        }

        private void Form_Registered_Users_List_Load(object sender, EventArgs e)
        {

        }

        private void btn_del_Click(object sender, EventArgs e)
        {
            int id = Convert.ToInt32(gridView1.GetFocusedRowCellValue("Registered_Users_ID"));
            var rs = MessageBox.Show("عملية حذف", "هل انت متاكد من عملية الحذف", MessageBoxButtons.YesNo);

            Toise.Toast_Done ToastDone = new Toise.Toast_Done();
            Toise.Toast_Waring ToastWaring = new Toise.Toast_Waring();
            Toast.Toast_Del ToastDel = new Toast.Toast_Del();
            Toast.Message_Box message_Box = new Toast.Message_Box();

            if (rs == DialogResult.Yes)
            {
                try
                {

                    tb_registered_users = DataBase.TB_Registered_Users.Where(x => x.Registered_Users_ID == id).FirstOrDefault();
                    DataBase.Entry(tb_registered_users).State = EntityState.Deleted;
                    DataBase.SaveChanges();
                    UpDate_Data();

                    ToastDel.Show();
               
                }
                catch
                {

                    message_Box.Message_Text.Text = "لا يمكنك حذف هذه الحالة لانها مسجلة فى بعض الفئات ";
                    message_Box.Show();

                    ToastWaring.Lable_Text.Text = "لا يوجد شئ لحذفة";
                    ToastWaring.Show();
                }
            }
        }


        private void gridControl1_CustomDrawCell(object sender, DevExpress.XtraGrid.Views.Base.RowCellCustomDrawEventArgs e)
        {
            if (e.Column.FieldName == "Rank_Name")
            {
                string cellValue = e.CellValue.ToString();
                if (cellValue == "غير مستحق")
                {
                    e.Appearance.BackColor = Color.OrangeRed;
                    e.Appearance.ForeColor = Color.White;
                }
                else if (cellValue == "حالة ( أ )")
                {
                    e.Appearance.BackColor = Color.MediumSeaGreen;
                    e.Appearance.ForeColor = Color.White;
                }
                else if (cellValue == "حالة ( جـ )")
                {
                    e.Appearance.BackColor = Color.MediumAquamarine;
                    e.Appearance.ForeColor = Color.White;
                }
                else if (cellValue == "حالة ( ب )")
                {
                    e.Appearance.BackColor = Color.DarkSeaGreen;
                    e.Appearance.ForeColor = Color.White;
                }
                else if (cellValue == "حالة ( د )")
                {
                    e.Appearance.BackColor = Color.MediumTurquoise;
                    e.Appearance.ForeColor = Color.White;
                }
            }
        }

        private void simpleButton1_Click(object sender, EventArgs e)
        {
            gridControl1.ShowPrintPreview();
        }

        private void gridControl1_Click(object sender, EventArgs e)
        {

        }
    }
}
