using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;


namespace FWD.G_Volanteer
{
    public partial class Form_Volanter_Subscribtion : Form
    {
        DB_FWDEntities DataBase = new DB_FWDEntities();
        TB_Volunteer_Subscription tb_volunteer_Subscription = new TB_Volunteer_Subscription();
        public Form_Volanter_Subscribtion()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            FWD.DB_FWDEntities dbContext22 = new FWD.DB_FWDEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext22.View_Volunteer_Subscription.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                gridControl1.DataSource = dbContext22.View_Volunteer_Subscription.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext


            FWD.DB_FWDEntities dbContext1 = new FWD.DB_FWDEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext1.TB_volunteer.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                Edit_Volanter_Name.Properties.DataSource = dbContext1.TB_volunteer.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            FWD.DB_FWDEntities dbContext = new FWD.DB_FWDEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.TB_Supscription_Moth.LoadAsync().ContinueWith(loadTask =>
            {
    // Bind data to control when loading complete
    Edit_Volanter_Month.Properties.DataSource = dbContext.TB_Supscription_Moth.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }

        private void Form_Volanter_Subscribtion_Load(object sender, EventArgs e)
        {
            // TODO: This line of code loads data into the 'dB_FWDDataSet2089.TB_Supscription_Moth' table. You can move, or remove it, as needed.
        //    this.tB_Supscription_MothTableAdapter.Fill(this.dB_FWDDataSet2089.TB_Supscription_Moth);
            // TODO: This line of code loads data into the 'dB_FWDDataSet2088.TB_volunteer' table. You can move, or remove it, as needed.
      //      this.tB_volunteerTableAdapter.Fill(this.dB_FWDDataSet2088.TB_volunteer);

        }

        private void panel2_Paint(object sender, PaintEventArgs e)
        {

        }

        private void gridControl1_Click(object sender, EventArgs e)
        {

        }

        private void simpleButton2_Click(object sender, EventArgs e)
        {
            Toise.Toast_Done ToastDone = new Toise.Toast_Done();
            Toise.Toast_Waring ToastWaring = new Toise.Toast_Waring();

            try
            {


                if (Edit_Volanter_Date.Text == "" || Edit_Volanter_value.Text == "" || Edit_Volanter_Name.Text == "")
                {
                    ToastWaring.Lable_Text.Text = "اكمل باقى البيانات";
                    ToastWaring.Show();
                }
                else
                {

                    tb_volunteer_Subscription.Volunteer_Subscription_Date = Edit_Volanter_Date.DateTime;
                    tb_volunteer_Subscription.Volunteer_Subscription_FK = Convert.ToInt32(Edit_Volanter_Name.EditValue);
                    tb_volunteer_Subscription.Volunteer_Subscription_Value = Convert.ToInt32(Edit_Volanter_value.Text);
                    tb_volunteer_Subscription.Volunteer_Subscription_recet_num = Convert.ToInt32(Recite.Text);
                    tb_volunteer_Subscription.Volunteer_Subscription_Moth = Convert.ToInt32(Edit_Volanter_Month.EditValue);

                    DataBase.TB_Volunteer_Subscription.Add(tb_volunteer_Subscription);
                    DataBase.SaveChanges();
                    ToastDone.LbTitelAlterBox.Text = "تمت الاضافة";
                    ToastDone.Show();

                    Edit_Volanter_Name.Text = "";
                    Edit_Volanter_value.Text = "";
                    Recite.Text = "";
                    Edit_Volanter_Month.Text = "";
                    Edit_Volanter_Date.Text = "";
                    UpDate_Data();

                }
            }
            catch
            {
                ToastWaring.Lable_Text.Text = "هذا الاسم غير مسجل";
                ToastWaring.Show();

            }
        }

        private void Edit_Volanter_Name_Click(object sender, EventArgs e)
        {
            // TODO: This line of code loads data into the 'dB_FWDDataSet2089.TB_Supscription_Moth' table. You can move, or remove it, as needed.
     //       this.tB_Supscription_MothTableAdapter.Fill(this.dB_FWDDataSet2089.TB_Supscription_Moth);
  ///          // TODO: This line of code loads data into the 'dB_FWDDataSet2088.TB_volunteer' table. You can move, or remove it, as needed.
   //         this.tB_volunteerTableAdapter.Fill(this.dB_FWDDataSet2088.TB_volunteer);
        }

        private void btn_ref_Click(object sender, EventArgs e)
        {
            UpDate_Data();
        }
        private void UpDate_Data()
        {
            DataBase = new DB_FWDEntities();
            gridControl1.DataSource = DataBase.View_Volunteer_Subscription.ToList();
        }

        private void btn_del_Click(object sender, EventArgs e)
        {

            int id = Convert.ToInt32(gridView1.GetFocusedRowCellValue("Volunteer_Subscription_ID"));
            var rs = MessageBox.Show("عملية حذف", "هل انت متاكد من عملية الحذف", MessageBoxButtons.YesNo);

            Toise.Toast_Done ToastDone = new Toise.Toast_Done();
            Toise.Toast_Waring ToastWaring = new Toise.Toast_Waring();
            //Toast.Toast_Del ToastDel = new Toast.Toast_Del();


            try
            {
                if (rs == DialogResult.Yes)
                {
                    tb_volunteer_Subscription = DataBase.TB_Volunteer_Subscription.Where(x => x.Volunteer_Subscription_ID == id).FirstOrDefault();
                    DataBase.Entry(tb_volunteer_Subscription).State = EntityState.Deleted;
                    DataBase.SaveChanges();
                    UpDate_Data();

                    ToastDone.Show();
                }
                UpDate_Data();

            }
            catch
            {
                ToastWaring.Lable_Text.Text = "لا يوجد شئ لحذفة";
                ToastWaring.Show();
                UpDate_Data();

            }
        }

        private void Edit_Volanter_Month_EditValueChanged(object sender, EventArgs e)
        {

        }

        private void Edit_Volanter_value_EditValueChanged(object sender, EventArgs e)
        {

        }

        private void Recite_EditValueChanged(object sender, EventArgs e)
        {

        }

        private void Edit_Volanter_Date_EditValueChanged(object sender, EventArgs e)
        {

        }

        private void Edit_Volanter_Name_EditValueChanged(object sender, EventArgs e)
        {

        }

        private void simpleButton1_Click(object sender, EventArgs e)
        {
            gridControl1.ShowPrintPreview();
        }
    }
}
