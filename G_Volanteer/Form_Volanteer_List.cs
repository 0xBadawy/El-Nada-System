using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;

namespace FWD.G_Volanteer
{
    public partial class Form_Volanteer_List : Form
    {
        DB_FWDEntities DataBase = new DB_FWDEntities();
        TB_volunteer tB_Volunteer = new TB_volunteer();
        public Form_Volanteer_List()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            FWD.DB_FWDEntities dbContext = new FWD.DB_FWDEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.view_volanteer.LoadAsync().ContinueWith(loadTask =>
            {
            // Bind data to control when loading complete
            gridControl1.DataSource = dbContext.view_volanteer.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }

        private void btn_ref_Click(object sender, EventArgs e)
        {
            UpDate_Data();
        }
        private void UpDate_Data()
        {
            DataBase = new DB_FWDEntities();
            gridControl1.DataSource = DataBase.view_volanteer.ToList();
        }

        private void btn_del_Click(object sender, EventArgs e)
        {
            int id = Convert.ToInt32(gridView1.GetFocusedRowCellValue("volunteer_ID"));
            var rs = MessageBox.Show("عملية حذف", "هل انت متاكد من عملية الحذف", MessageBoxButtons.YesNo);

            Toise.Toast_Done ToastDone = new Toise.Toast_Done();
            Toise.Toast_Waring ToastWaring = new Toise.Toast_Waring();
            Toast.Toast_Del ToastDel = new Toast.Toast_Del();
             Toast.Message_Box message = new Toast.Message_Box();

            try
            {
                if (rs == DialogResult.Yes)
                {
                    tB_Volunteer = DataBase.TB_volunteer.Where(x => x.volunteer_ID == id).FirstOrDefault();
                    DataBase.Entry(tB_Volunteer).State = EntityState.Deleted;
                    DataBase.SaveChanges();
                    UpDate_Data();

                    ToastDone.Show();
                }
                UpDate_Data();

            }
            catch
            {
                message.Message_Text.Text = "قد يكون العضو قد تم تسجيلة فى سجل دفع الاشتركات تاكد من حذف بيانات الدفع و حاول مره اخرى";
                ToastWaring.Lable_Text.Text = "خطأ اثناء الحذف";
                ToastWaring.Show();
                message.Show();
                UpDate_Data();

            }
        }

        private void simpleButton1_Click(object sender, EventArgs e)
        {
            gridControl1.ShowPrintPreview();

        }

        private void btn_edt_Click(object sender, EventArgs e)
        {

        }
    }
}
