using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Drawing.Drawing2D;
using System.Data.SqlClient;
using System.Data.Entity.Infrastructure;
using System.Data.Entity;


namespace FWD.G_Donations
{
    public partial class Form_Donner_Add : Form
    {
        DB_FWDEntities DataBase = new DB_FWDEntities();
      //  TB_Donner_info tb_donner_info = new TB_Donner_info();
        private int Donner_id_edit=0;
        public Form_Donner_Add()
        {
            InitializeComponent();

            FWD.DB_FWDEntities dbContext = new FWD.DB_FWDEntities();
            dbContext.View_Donor.LoadAsync().ContinueWith(loadTask =>
            {
                gridControl1.DataSource = dbContext.View_Donor.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());


            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            FWD.DB_FWDEntities dbContext1 = new FWD.DB_FWDEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext1.TBE_LOC.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                edit_donner_add.Properties.DataSource = dbContext1.TBE_LOC.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());





            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            FWD.DB_FWDEntities dbContext3 = new FWD.DB_FWDEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext3.TBE_LOC.LoadAsync().ContinueWith(loadTask =>
            {
    // Bind data to control when loading complete
    edit_donner_add_jop.Properties.DataSource = dbContext3.TBE_LOC.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }

        private void Form_Donner_Add_Load(object sender, EventArgs e)
        {
            this.tBE_LOCTableAdapter1.Fill(this.dB_FWDDataSet2056.TBE_LOC);
            this.tBE_LOCTableAdapter.Fill(this.dB_FWDDataSet2055.TBE_LOC);
        }



        private void MakePanelEdgesRound(Panel panel)
        {
            int radius = 20;
            GraphicsPath path = new GraphicsPath();
            path.AddArc(panel.ClientRectangle.Width - radius, 0, radius, radius, 270, 90);
            path.AddArc(panel.ClientRectangle.Width - radius, panel.ClientRectangle.Height - radius, radius, radius, 0, 90);
            path.AddArc(0, panel.ClientRectangle.Height - radius, radius, radius, 90, 90);
            path.AddArc(0, 0, radius, radius, 180, 90);
            path.CloseFigure();
            panel.Region = new Region(path);
        }

        private void simpleButton2_Click(object sender, EventArgs e)
        {
            Toise.Toast_Done ToastDone = new Toise.Toast_Done();
            Toise.Toast_Waring ToastWaring = new Toise.Toast_Waring();

            TB_Donner_info tb_donner_info = new TB_Donner_info();

            if (Donner_id_edit == 0)
            {

                try
                {
                    tb_donner_info.Donner_Name = edt_donner_name.Text;
                    tb_donner_info.Donner_Phone = edt_donner_phone.Text;
                    tb_donner_info.Donner_proNoun = edt_donner_pro_noun.Text;
                    tb_donner_info.Donner_SSN = textEdit2.Text;
                    tb_donner_info.Donner_Add = Convert.ToInt32(edit_donner_add.EditValue);
                    tb_donner_info.Donner_Jop_Add = Convert.ToInt32(edit_donner_add_jop.EditValue);


                    DataBase.TB_Donner_info.Add(tb_donner_info);
                    DataBase.SaveChanges();

                    ToastDone.LbTitelAlterBox.Text = "تمت عملية التسجيل";
                    ToastDone.Show();
                    Clear_Form();
                    //        this.Close();

                }
                catch (Exception ex)
                {
                    ToastWaring.Lable_Text.Text = "An error occurred:444 ";// + ex.Message;
                    ToastWaring.Show();
                }

            }
            else
            {




                try
                {
                    tb_donner_info.Donner_ID = Donner_id_edit;
                    tb_donner_info.Donner_Name = edt_donner_name.Text;
                    tb_donner_info.Donner_Phone = edt_donner_phone.Text;
                    tb_donner_info.Donner_proNoun = edt_donner_pro_noun.Text;
                    tb_donner_info.Donner_SSN = edt_donner_ssn.Text;
                    tb_donner_info.Donner_Add = Convert.ToInt32(edit_donner_add.EditValue);
                    tb_donner_info.Donner_Jop_Add = Convert.ToInt32(edit_donner_add_jop.EditValue);


                    DataBase.Entry(tb_donner_info).State= System.Data.Entity.EntityState.Modified;
                    DataBase.SaveChanges();

                    ToastDone.LbTitelAlterBox.Text = "تمت عملية التعديل";
                    ToastDone.Show();
                    Clear_Form();


                }
                catch (Exception ex)
                {
                    ToastWaring.Lable_Text.Text = "An error occurred: ";//+ ex.Message;
                    ToastWaring.Show();
                }

            }


            Donner_id_edit = 0;
            label9.Text = "اضافة متبرع جديد";
            simpleButton2.Text = "اضــافــة";
            gridControl1.DataSource = DataBase.View_Donor.ToList();

        }






        private void Clear_Form(){
            edt_donner_name.Text="";
            edt_donner_phone.Text = "";
            edt_donner_pro_noun.Text = "";
            edt_donner_ssn.Text = "";
            edit_donner_add_jop.Text = "";
            edit_donner_add_jop.Text = "";
        }

        private void btn_ref_Click(object sender, EventArgs e)
        {
            DataBase = new DB_FWDEntities();

            gridControl1.DataSource = DataBase.View_Donor.ToList();



            Donner_id_edit = 0;
            label9.Text = "اضافة متبرع جديد";
            simpleButton2.Text = "اضــافــة";
        }

        private void edit_donner_add_Click(object sender, EventArgs e)
        {
            this.tBE_LOCTableAdapter1.Fill(this.dB_FWDDataSet2056.TBE_LOC);
            this.tBE_LOCTableAdapter.Fill(this.dB_FWDDataSet2055.TBE_LOC);
        }

        private void edit_donner_add_jop_Click(object sender, EventArgs e)
        {
            this.tBE_LOCTableAdapter1.Fill(this.dB_FWDDataSet2056.TBE_LOC);
            this.tBE_LOCTableAdapter.Fill(this.dB_FWDDataSet2055.TBE_LOC);
        }

        private void panel2_Paint(object sender, PaintEventArgs e)
        {

        }

        private void simpleButton3_Click(object sender, EventArgs e)
        {
            TB_Donner_info tb_donner_info = new TB_Donner_info();


            int id = Convert.ToInt32(gridView1.GetFocusedRowCellValue("Donner_ID"));
            tb_donner_info = DataBase.TB_Donner_info.Where(x => x.Donner_ID == id).FirstOrDefault();

            Donner_id_edit = id;

            label9.Text = "تعديل بيانات متبرع";
            simpleButton2.Text = "تعديل";


            try
            {


                edit_donner_add.EditValue = tb_donner_info.Donner_Add;
                edt_donner_phone.Text = tb_donner_info.Donner_Phone;
                edt_donner_name.Text = tb_donner_info.Donner_Name;
                edt_donner_pro_noun.Text = tb_donner_info.Donner_proNoun;
                edit_donner_add_jop.EditValue = tb_donner_info.Donner_Jop_Add;
                edt_donner_ssn.Text = tb_donner_info.Donner_SSN;






            }
            catch
            {

            }

           
        }

        private void simpleButton1_Click(object sender, EventArgs e)
        {
            gridControl1.ShowPrintPreview();
        }
    }
}
