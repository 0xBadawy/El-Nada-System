using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;

namespace FWD.G_Customers
{
    public partial class Form_Cus_Husban : Form
    {

        DB_FWDEntities DataBase = new DB_FWDEntities();
        TB_CUST_Father tb_cust_father = new TB_CUST_Father();
        Form_Cust_Add form_add = new Form_Cust_Add();

        public Form_Cus_Husban()
        {
            InitializeComponent();
            FWD.DB_FWDEntities dbContext1 = new FWD.DB_FWDEntities();
            dbContext1.TB_Educational_Status.LoadAsync().ContinueWith(loadTask =>
            {
                edt_father_edu.Properties.DataSource = dbContext1.TB_Educational_Status.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            FWD.DB_FWDEntities dbContext = new FWD.DB_FWDEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.TB_Health_Status.LoadAsync().ContinueWith(loadTask =>
            {
    // Bind data to control when loading complete
    edt_per_father_type.Properties.DataSource = dbContext.TB_Health_Status.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }

        private void simpleButton1_Click(object sender, EventArgs e)
        {

            try{ 
                tb_cust_father.CUST_Father_Bairth = edt_father_bairth.DateTimeOffset.DateTime;
                tb_cust_father.CUST_Father_Edu = Convert.ToInt32(edt_father_edu.EditValue);
                tb_cust_father.CUST_Father_helth = Convert.ToInt32(edt_per_father_type.EditValue);
                tb_cust_father.CUST_Father_Helth_det = edt_per_father_det.Text;
                tb_cust_father.CUST_Father_Name = edt_father_name.Text;
                tb_cust_father.CUST_Father_Phone = edt_father_phone.Text;
                tb_cust_father.CUST_Father_SSN = edt_father_ssn.Text;

                int ty = Class_main.myGlobalVariable;
                tb_cust_father.CUST_Father_FK = ty;
                DataBase.TB_CUST_Father.Add(tb_cust_father);
                DataBase.SaveChanges();
             //   form_add.btn_Main_cus.Enabled = true;

                simpleButton1.Enabled = false;
                Toise.Toast_Done toast_Done = new Toise.Toast_Done();
                toast_Done.Lable_Text.Text = "تم اضافة بيانات الحالة";
                toast_Done.Show();

            }
            catch
            {
                Toise.Toast_Wrong toast_Wrong = new Toise.Toast_Wrong();
                toast_Wrong.Lable_Text.Text = "خطأ فى البيانات";
                toast_Wrong.Show();
            }


        }

        private void Form_Cus_Husban_Load(object sender, EventArgs e)
        {
            
        }

        private void edt_father_edu_Click(object sender, EventArgs e)
        {
           


        }

        private void edt_per_father_type_Click(object sender, EventArgs e)
        {
           

        }

        private void edt_per_father_type_EditValueChanged(object sender, EventArgs e)
        {

        }

        private void edt_father_bairth_EditValueChanged(object sender, EventArgs e)
        {
            edt_father_label_age.Text = Convert.ToString(CalculateAge(edt_father_bairth.DateTimeOffset));
        }

        private int CalculateAge(DateTimeOffset birthDate)
        {
            DateTimeOffset currentDate = DateTimeOffset.Now;
            int age = currentDate.Year - birthDate.Year;
            if (currentDate < birthDate.AddYears(age)) age--;
            return age;
        }
    }
}
