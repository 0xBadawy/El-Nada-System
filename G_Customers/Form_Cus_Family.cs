using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;

namespace FWD.G_Customers
{
    public partial class Form_Cus_Family : Form
    {
        DB_FWDEntities DataBase = new DB_FWDEntities();
        //   TB_CUS_Family_Member tb_family = new TB_CUS_Family_Member();
        public Form_Cus_Family()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            FWD.DB_FWDEntities dbContext1 = new FWD.DB_FWDEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext1.TB_Educational_Status.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                edt_cus_member_edu.Properties.DataSource = dbContext1.TB_Educational_Status.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());




            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            FWD.DB_FWDEntities dbContext2 = new FWD.DB_FWDEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext2.TB_Health_Status.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                edt_member_helth_type.Properties.DataSource = dbContext2.TB_Health_Status.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            FWD.DB_FWDEntities dbContext = new FWD.DB_FWDEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.TB_Social_State.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                edt_cus_member_so_st.Properties.DataSource = dbContext.TB_Social_State.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            FWD.DB_FWDEntities dbContext4 = new FWD.DB_FWDEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext4.View_CUST_Family.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                gridControl1.DataSource = dbContext4.View_CUST_Family.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());

            //UpDate_Data();

            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            FWD.DB_FWDEntities dbContext5 = new FWD.DB_FWDEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext5.View_CUST_Family.LoadAsync().ContinueWith(loadTask =>
            {
    // Bind data to control when loading complete
    gridControl1.DataSource = dbContext5.View_CUST_Family.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }

        private void simpleButton2_Click(object sender, EventArgs e)
        {
            try { 

                TB_CUS_Family_Member tb_family = new TB_CUS_Family_Member();
                tb_family.CUST_Family_Member_Age =Convert.ToInt32( edt_member_label_age.Text);
                tb_family.CUST_Family_Member_Bairth = edt_member_bairth.DateTimeOffset.DateTime;
                tb_family.CUST_Family_Member_Edu =Convert.ToInt32( edt_cus_member_edu.EditValue);
                tb_family.CUST_Family_Member_Helth = Convert.ToInt32(edt_member_helth_type.EditValue);
                tb_family.CUST_Family_Member_Helth_det = edt_member_helth_det.Text;
                tb_family.CUST_Family_Member_Name = edt_member_name.Text;
                tb_family.CUST_Family_Member_Relation = edt_cus_member_relation.Text;
                tb_family.CUST_Family_Member_So_St = Convert.ToInt32(edt_cus_member_so_st.EditValue);
                tb_family.CUST_Family_Member_SSN = edt_member_ssn.Text;
                tb_family.CUST_Family_Member_PK = Class_main.myGlobalVariable;
                DataBase.TB_CUS_Family_Member.Add(tb_family);
                DataBase.SaveChanges();
                UpDate_Data();

                Toise.Toast_Done toast_Done = new Toise.Toast_Done();
                toast_Done.Lable_Text.Text = "تم اضافة عضو فى العائلة";
                toast_Done.Show();
               // clear();

            }
            catch
            {
                Toise.Toast_Wrong toast_Wrong = new Toise.Toast_Wrong();
                toast_Wrong.Lable_Text.Text = "خطأ فى البيانات";
                toast_Wrong.Show();
            }


        }
        private void clear()
        {


            edt_member_label_age.Text ="";
            edt_member_bairth.Text = "";
            edt_cus_member_edu.Text = "";
            edt_member_helth_type.Text = "";
            edt_member_helth_det.Text = "";
            edt_member_name.Text = "";
            edt_cus_member_relation.Text = "";
            edt_cus_member_so_st.Text = "";
            edt_member_ssn.Text = "";




        }
        private void edt_cus_member_relation_SelectedIndexChanged(object sender, EventArgs e)
        {

        }

        private void Form_Cus_Family_Load(object sender, EventArgs e)
        {
          //  Lood();

        }

        private void panel_Form_Cus_Family_MouseHover(object sender, EventArgs e)
        {

          //  Lood();
        }

        private void panel_Form_Cus_Family_Paint(object sender, PaintEventArgs e)
        {

        }

        private void Lood()
        {  
            
            
            /*FWD.DB_FWDEntities dbContext1 = new FWD.DB_FWDEntities();
            dbContext1.TB_Educational_Status.LoadAsync().ContinueWith(loadTask =>
            {
                edt_cus_member_edu.Properties.DataSource = dbContext1.TB_Educational_Status.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());


            FWD.DB_FWDEntities dbContext2 = new FWD.DB_FWDEntities();
            dbContext2.TB_Health_Status.LoadAsync().ContinueWith(loadTask =>
            {
                edt_member_helth_type.Properties.DataSource = dbContext2.TB_Health_Status.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
         
            FWD.DB_FWDEntities dbContext = new FWD.DB_FWDEntities();
            dbContext.TB_Social_State.LoadAsync().ContinueWith(loadTask =>
            {
                edt_cus_member_so_st.Properties.DataSource = dbContext.TB_Social_State.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());*/

        }

        private void edt_cus_member_edu_EditValueChanged(object sender, EventArgs e)
        {
         //   Lood();
        }

        private void edt_member_name_EditValueChanged(object sender, EventArgs e)
        {
            Lood();
        }

        private void edt_cus_member_edu_Click(object sender, EventArgs e)
        {
            Lood();
        }

        private void edt_member_helth_type_Click(object sender, EventArgs e)
        {
            Lood();

        }

        private void edt_cus_member_so_st_Click(object sender, EventArgs e)
        {
            Lood();

        }

        private void simpleButton1_Click(object sender, EventArgs e)
        {
            TB_CUS_Family_Member tb_family = new TB_CUS_Family_Member();

            int id = Convert.ToInt32(gridView1.GetFocusedRowCellValue("CUST_Family_ID"));
            var rs = MessageBox.Show("عملية حذف", "هل انت متاكد من عملية الحذف", MessageBoxButtons.YesNo);

            Toise.Toast_Done ToastDone = new Toise.Toast_Done();
            Toise.Toast_Waring ToastWaring = new Toise.Toast_Waring();
            Toast.Toast_Del ToastDel = new Toast.Toast_Del();


            try
            {
                if (rs == DialogResult.Yes)
                {
                    tb_family = DataBase.TB_CUS_Family_Member.Where(x => x.CUST_Family_ID == id).FirstOrDefault();
                    DataBase.Entry(tb_family).State = EntityState.Deleted;
                    DataBase.SaveChanges();
                    UpDate_Data();

                    ToastDone.Lable_Text.Text = "تم حذف العضو";
                    ToastDone.Show();
                }
            }
            catch
            {
                ToastWaring.Lable_Text.Text = "لا يوجد شئ لحذفة";
                ToastWaring.Show();
            }
        }

        private void UpDate_Data(){
            DataBase = new DB_FWDEntities();
            gridControl1.DataSource = DataBase.View_CUST_Family.Where(x => x.CUST_Family_Member_PK == Class_main.myGlobalVariable).ToList();

        }

        private void simpleButton3_Click(object sender, EventArgs e)
        {
            UpDate_Data();
        }

        private void edt_member_bairth_EditValueChanged(object sender, EventArgs e)
        {
            edt_member_label_age.Text = Convert.ToString(CalculateAge(edt_member_bairth.DateTimeOffset));
        }

        private int CalculateAge(DateTimeOffset birthDate)
        {
            DateTimeOffset currentDate = DateTimeOffset.Now;
            int age = currentDate.Year - birthDate.Year;
            if (currentDate < birthDate.AddYears(age)) age--;
            return age;
        }
    }
}
